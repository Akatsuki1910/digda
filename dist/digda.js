!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.Digda=n():e.Digda=n()}(this,(function(){return function(e){var n={};function t(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(a,r,function(n){return e[n]}.bind(null,r));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./digda/index.js")}({"./digda/css.js":
/*!**********************!*\
  !*** ./digda/css.js ***!
  \**********************/
/*! exports provided: css */function(e,n,t){"use strict";t.r(n),t.d(n,"css",(function(){return a}));var a='.digda-wrapper .digda-main .digda-eye-right, .digda-wrapper .digda-main .digda-eye-left {\n  position: absolute;\n  width: 20px;\n  height: 50px;\n  border-radius: 50% 50%;\n  background-color: black;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n\n.digda-wrapper {\n  width: 250px;\n  height: 240px;\n  margin: 4px;\n}\n\n.digda-wrapper .digda-main {\n  -webkit-clip-path: inset(0px 0px);\n          clip-path: inset(0px 0px);\n}\n\n.digda-wrapper .digda-main .digda-body {\n  margin: 0 auto;\n  position: relative;\n  width: 200px;\n  height: 200px;\n  border-radius: 50% 50% 0 0;\n  background-color: #b37653;\n  -webkit-transition: -webkit-transform 1s;\n  transition: -webkit-transform 1s;\n  transition: transform 1s;\n  transition: transform 1s, -webkit-transform 1s;\n}\n\n.digda-wrapper .digda-main .digda-body:hover {\n  -webkit-transform: translateY(100px);\n          transform: translateY(100px);\n}\n\n.digda-wrapper .digda-main .digda-eye-right {\n  top: 30%;\n  left: 35%;\n}\n\n.digda-wrapper .digda-main .digda-eye-left {\n  top: 30%;\n  left: 65%;\n}\n\n.digda-wrapper .digda-main .digda-eye-white {\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50% 50%;\n  background-color: white;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n  top: 30%;\n  left: 50%;\n}\n\n.digda-wrapper .digda-main .digda-nose {\n  position: absolute;\n  width: 60px;\n  height: 30px;\n  border-radius: 50% 50%;\n  background-color: pink;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n  top: 50%;\n  left: 50%;\n}\n\n.digda-wrapper .digda-stone-wrapper {\n  margin: 0 auto;\n}\n\n.digda-wrapper .digda-stone-wrapper .digda-stone {\n  display: inline-block;\n  position: relative;\n  height: 30px;\n  width: calc((3 / 1.73205) * 30px);\n  background-color: gray;\n  margin: 0;\n}\n\n.digda-wrapper .digda-stone-wrapper .digda-stone:not(:first-of-type) {\n  margin-left: -2.5px;\n}\n\n.digda-wrapper .digda-stone-wrapper .digda-stone::before {\n  content: "";\n  position: absolute;\n  height: 30px;\n  width: calc((3 / 1.73205) * 30px);\n  background-color: gray;\n  -webkit-transform: rotate(60deg);\n          transform: rotate(60deg);\n}\n\n.digda-wrapper .digda-stone-wrapper .digda-stone::after {\n  content: "";\n  position: absolute;\n  height: 30px;\n  width: calc((3 / 1.73205) * 30px);\n  background-color: gray;\n  -webkit-transform: rotate(-60deg);\n          transform: rotate(-60deg);\n}\n'},"./digda/index.js":
/*!************************!*\
  !*** ./digda/index.js ***!
  \************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return d}));var a=t(/*! ./css.js */"./digda/css.js");function r(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}var d=function(){function e(){var n,t,a;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),a=function(e,n,t){e.className=t,n.appendChild(e)},(t="_addStyleElement")in(n=this)?Object.defineProperty(n,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[t]=a,this._createDigda()}var n,t,d;return n=e,(t=[{key:"_createDigda",value:function(){var e=this,n=document.createElement("style");n.styleSheet?n.styleSheet.cssText=a.css:n.appendChild(document.createTextNode(a.css)),document.getElementsByTagName("head")[0].appendChild(n),Array.from(document.getElementsByClassName("digda")).forEach((function(n){for(var t=[],a=document.createElement("div"),r=document.createElement("div"),d=document.createElement("div"),i=document.createElement("div"),o=document.createElement("div"),l=document.createElement("div"),s=document.createElement("div"),p=document.createElement("div"),c=document.createElement("div"),g=0;g<5;g++)t.push(document.createElement("div"));e._addStyleElement(a,n,"digda-wrapper"),e._addStyleElement(r,a,"digda-main"),e._addStyleElement(d,r,"digda-body"),e._addStyleElement(i,d,"digda-eye-right"),e._addStyleElement(l,i,"digda-eye-white"),e._addStyleElement(o,d,"digda-eye-left"),e._addStyleElement(s,o,"digda-eye-white"),e._addStyleElement(p,d,"digda-nose"),e._addStyleElement(c,a,"digda-stone-wrapper");for(var u=0;u<5;u++)e._addStyleElement(t[u],c,"digda-stone")}))}}])&&r(n.prototype,t),d&&r(n,d),e}()}}).default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,